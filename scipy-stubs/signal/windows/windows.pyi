# Stubs for scipy.signal.windows.windows (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

def general_cosine(M: Any, a: Any, sym: bool = ...): ...
def boxcar(M: Any, sym: bool = ...): ...
def triang(M: Any, sym: bool = ...): ...
def parzen(M: Any, sym: bool = ...): ...
def bohman(M: Any, sym: bool = ...): ...
def blackman(M: Any, sym: bool = ...): ...
def nuttall(M: Any, sym: bool = ...): ...
def blackmanharris(M: Any, sym: bool = ...): ...
def flattop(M: Any, sym: bool = ...): ...
def bartlett(M: Any, sym: bool = ...): ...
def hann(M: Any, sym: bool = ...): ...
def hanning(*args: Any, **kwargs: Any): ...
def tukey(M: Any, alpha: float = ..., sym: bool = ...): ...
def barthann(M: Any, sym: bool = ...): ...
def general_hamming(M: Any, alpha: Any, sym: bool = ...): ...
def hamming(M: Any, sym: bool = ...): ...
def kaiser(M: Any, beta: Any, sym: bool = ...): ...
def gaussian(M: Any, std: Any, sym: bool = ...): ...
def general_gaussian(M: Any, p: Any, sig: Any, sym: bool = ...): ...
def chebwin(M: Any, at: Any, sym: bool = ...): ...
def slepian(M: Any, width: Any, sym: bool = ...): ...
def cosine(M: Any, sym: bool = ...): ...
def exponential(M: Any, center: Optional[Any] = ..., tau: float = ..., sym: bool = ...): ...
def dpss(M: Any, NW: Any, Kmax: Optional[Any] = ..., sym: bool = ..., norm: Optional[Any] = ..., return_ratios: bool = ...): ...
def get_window(window: Any, Nx: Any, fftbins: bool = ...): ...
