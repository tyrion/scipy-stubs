# Stubs for scipy.ndimage.measurements (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

def label(input: Any, structure: Optional[Any] = ..., output: Optional[Any] = ...): ...
def find_objects(input: Any, max_label: int = ...): ...
def labeled_comprehension(input: Any, labels: Any, index: Any, func: Any, out_dtype: Any, default: Any, pass_positions: bool = ...): ...
def sum(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def mean(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def variance(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def standard_deviation(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def minimum(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def maximum(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def median(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def minimum_position(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def maximum_position(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def extrema(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def center_of_mass(input: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def histogram(input: Any, min: Any, max: Any, bins: Any, labels: Optional[Any] = ..., index: Optional[Any] = ...): ...
def watershed_ift(input: Any, markers: Any, structure: Optional[Any] = ..., output: Optional[Any] = ...): ...
