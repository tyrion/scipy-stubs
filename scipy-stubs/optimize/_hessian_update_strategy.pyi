# Stubs for scipy.optimize._hessian_update_strategy (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class HessianUpdateStrategy:
    def initialize(self, n: Any, approx_type: Any) -> None: ...
    def update(self, delta_x: Any, delta_grad: Any) -> None: ...
    def dot(self, p: Any) -> None: ...
    def get_matrix(self) -> None: ...

class FullHessianUpdateStrategy(HessianUpdateStrategy):
    _syr: Any = ...
    _syr2: Any = ...
    _symv: Any = ...
    init_scale: Any = ...
    first_iteration: Any = ...
    approx_type: Any = ...
    B: Any = ...
    H: Any = ...
    def __init__(self, init_scale: str = ...) -> None: ...
    n: Any = ...
    def initialize(self, n: Any, approx_type: Any) -> None: ...
    def _auto_scale(self, delta_x: Any, delta_grad: Any): ...
    def _update_implementation(self, delta_x: Any, delta_grad: Any) -> None: ...
    def update(self, delta_x: Any, delta_grad: Any): ...
    def dot(self, p: Any): ...
    def get_matrix(self): ...

class BFGS(FullHessianUpdateStrategy):
    min_curvature: Any = ...
    exception_strategy: Any = ...
    def __init__(self, exception_strategy: str = ..., min_curvature: Optional[Any] = ..., init_scale: str = ...) -> None: ...
    H: Any = ...
    def _update_inverse_hessian(self, ys: Any, Hy: Any, yHy: Any, s: Any) -> None: ...
    B: Any = ...
    def _update_hessian(self, ys: Any, Bs: Any, sBs: Any, y: Any) -> None: ...
    def _update_implementation(self, delta_x: Any, delta_grad: Any): ...

class SR1(FullHessianUpdateStrategy):
    min_denominator: Any = ...
    def __init__(self, min_denominator: float = ..., init_scale: str = ...) -> None: ...
    B: Any = ...
    H: Any = ...
    def _update_implementation(self, delta_x: Any, delta_grad: Any): ...
