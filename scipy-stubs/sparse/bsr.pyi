# Stubs for scipy.sparse.bsr (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .compressed import _cs_matrix
from .data import _minmax_mixin
from typing import Any, Optional

class bsr_matrix(_cs_matrix, _minmax_mixin):
    format: str = ...
    _shape: Any = ...
    data: Any = ...
    indices: Any = ...
    indptr: Any = ...
    def __init__(self, arg1: Any, shape: Optional[Any] = ..., dtype: Optional[Any] = ..., copy: bool = ..., blocksize: Optional[Any] = ...) -> None: ...
    def check_format(self, full_check: bool = ...) -> None: ...
    def _get_blocksize(self): ...
    blocksize: Any = ...
    def getnnz(self, axis: Optional[Any] = ...): ...
    def __repr__(self): ...
    def diagonal(self, k: int = ...): ...
    def __getitem__(self, key: Any) -> None: ...
    def __setitem__(self, key: Any, val: Any) -> None: ...
    def matvec(self, other: Any): ...
    def matmat(self, other: Any): ...
    def _add_dense(self, other: Any): ...
    def _mul_vector(self, other: Any): ...
    def _mul_multivector(self, other: Any): ...
    def _mul_sparse_matrix(self, other: Any): ...
    def tobsr(self, blocksize: Optional[Any] = ..., copy: bool = ...): ...
    def tocsr(self, copy: bool = ...): ...
    def tocsc(self, copy: bool = ...): ...
    def tocoo(self, copy: bool = ...): ...
    def toarray(self, order: Optional[Any] = ..., out: Optional[Any] = ...): ...
    def transpose(self, axes: Optional[Any] = ..., copy: bool = ...): ...
    def eliminate_zeros(self): ...
    has_canonical_format: bool = ...
    def sum_duplicates(self): ...
    has_sorted_indices: bool = ...
    def sort_indices(self): ...
    def prune(self) -> None: ...
    def _binopt(self, other: Any, op: Any, in_shape: Optional[Any] = ..., out_shape: Optional[Any] = ...): ...
    def _with_data(self, data: Any, copy: bool = ...): ...

def isspmatrix_bsr(x: Any): ...
