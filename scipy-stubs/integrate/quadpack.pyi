# Stubs for scipy.integrate.quadpack (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class IntegrationWarning(UserWarning): ...

def quad_explain(output: Any = ...) -> None: ...
def quad(func: Any, a: Any, b: Any, args: Any = ..., full_output: int = ..., epsabs: float = ..., epsrel: float = ..., limit: int = ..., points: Optional[Any] = ..., weight: Optional[Any] = ..., wvar: Optional[Any] = ..., wopts: Optional[Any] = ..., maxp1: int = ..., limlst: int = ...): ...
def dblquad(func: Any, a: Any, b: Any, gfun: Any, hfun: Any, args: Any = ..., epsabs: float = ..., epsrel: float = ...): ...
def tplquad(func: Any, a: Any, b: Any, gfun: Any, hfun: Any, qfun: Any, rfun: Any, args: Any = ..., epsabs: float = ..., epsrel: float = ...): ...
def nquad(func: Any, ranges: Any, args: Optional[Any] = ..., opts: Optional[Any] = ..., full_output: bool = ...): ...

class _RangeFunc:
    range_: Any = ...
    def __init__(self, range_: Any) -> None: ...
    def __call__(self, *args: Any): ...

class _OptFunc:
    opt: Any = ...
    def __init__(self, opt: Any) -> None: ...
    def __call__(self, *args: Any): ...

class _NQuad:
    abserr: int = ...
    func: Any = ...
    ranges: Any = ...
    opts: Any = ...
    maxdepth: Any = ...
    full_output: Any = ...
    out_dict: Any = ...
    def __init__(self, func: Any, ranges: Any, opts: Any, full_output: Any) -> None: ...
    def integrate(self, *args: Any, **kwargs: Any): ...
