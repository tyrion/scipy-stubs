# Stubs for scipy.integrate._ivp.rk (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .base import DenseOutput, OdeSolver
from .common import norm, select_initial_step, validate_max_step, validate_tol, warn_extraneous
from typing import Any

SAFETY: float
MIN_FACTOR: float
MAX_FACTOR: int

def rk_step(fun: Any, t: Any, y: Any, f: Any, h: Any, A: Any, B: Any, C: Any, E: Any, K: Any): ...

class RungeKutta(OdeSolver):
    C: Any = ...
    A: Any = ...
    B: Any = ...
    E: Any = ...
    P: Any = ...
    order: Any = ...
    n_stages: Any = ...
    y_old: Any = ...
    max_step: Any = ...
    f: Any = ...
    h_abs: Any = ...
    K: Any = ...
    def __init__(self, fun: Any, t0: Any, y0: Any, t_bound: Any, max_step: Any = ..., rtol: float = ..., atol: float = ..., vectorized: bool = ..., **extraneous: Any) -> None: ...
    t: Any = ...
    y: Any = ...
    def _step_impl(self): ...
    def _dense_output_impl(self): ...

class RK23(RungeKutta):
    order: int = ...
    n_stages: int = ...
    C: Any = ...
    A: Any = ...
    B: Any = ...
    E: Any = ...
    P: Any = ...

class RK45(RungeKutta):
    order: int = ...
    n_stages: int = ...
    C: Any = ...
    A: Any = ...
    B: Any = ...
    E: Any = ...
    P: Any = ...

class RkDenseOutput(DenseOutput):
    h: Any = ...
    Q: Any = ...
    order: Any = ...
    y_old: Any = ...
    def __init__(self, t_old: Any, t: Any, y_old: Any, Q: Any) -> None: ...
    def _call_impl(self, t: Any): ...
