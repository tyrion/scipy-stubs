# Stubs for scipy.interpolate._cubic (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from . import BPoly, PPoly
from typing import Any, Optional

class PchipInterpolator(BPoly):
    axis: Any = ...
    def __init__(self, x: Any, y: Any, axis: int = ..., extrapolate: Optional[Any] = ...) -> None: ...
    def roots(self): ...
    @staticmethod
    def _edge_case(h0: Any, h1: Any, m0: Any, m1: Any): ...
    @staticmethod
    def _find_derivatives(x: Any, y: Any): ...

def pchip_interpolate(xi: Any, yi: Any, x: Any, der: int = ..., axis: int = ...): ...
pchip = PchipInterpolator

class Akima1DInterpolator(PPoly):
    axis: Any = ...
    def __init__(self, x: Any, y: Any, axis: int = ...) -> None: ...
    def extend(self, c: Any, x: Any, right: bool = ...) -> None: ...
    @classmethod
    def from_spline(cls, tck: Any, extrapolate: Optional[Any] = ...) -> None: ...
    @classmethod
    def from_bernstein_basis(cls, bp: Any, extrapolate: Optional[Any] = ...) -> None: ...

class CubicSpline(PPoly):
    axis: Any = ...
    def __init__(self, x: Any, y: Any, axis: int = ..., bc_type: str = ..., extrapolate: Optional[Any] = ...) -> None: ...
    @staticmethod
    def _validate_bc(bc_type: Any, y: Any, expected_deriv_shape: Any, axis: Any): ...
