# Stubs for scipy.interpolate._fitpack_impl (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

def splprep(x: Any, w: Optional[Any] = ..., u: Optional[Any] = ..., ub: Optional[Any] = ..., ue: Optional[Any] = ..., k: int = ..., task: int = ..., s: Optional[Any] = ..., t: Optional[Any] = ..., full_output: int = ..., nest: Optional[Any] = ..., per: int = ..., quiet: int = ...): ...
def splrep(x: Any, y: Any, w: Optional[Any] = ..., xb: Optional[Any] = ..., xe: Optional[Any] = ..., k: int = ..., task: int = ..., s: Optional[Any] = ..., t: Optional[Any] = ..., full_output: int = ..., per: int = ..., quiet: int = ...): ...
def splev(x: Any, tck: Any, der: int = ..., ext: int = ...): ...
def splint(a: Any, b: Any, tck: Any, full_output: int = ...): ...
def sproot(tck: Any, mest: int = ...): ...
def spalde(x: Any, tck: Any): ...
def bisplrep(x: Any, y: Any, z: Any, w: Optional[Any] = ..., xb: Optional[Any] = ..., xe: Optional[Any] = ..., yb: Optional[Any] = ..., ye: Optional[Any] = ..., kx: int = ..., ky: int = ..., task: int = ..., s: Optional[Any] = ..., eps: float = ..., tx: Optional[Any] = ..., ty: Optional[Any] = ..., full_output: int = ..., nxest: Optional[Any] = ..., nyest: Optional[Any] = ..., quiet: int = ...): ...
def bisplev(x: Any, y: Any, tck: Any, dx: int = ..., dy: int = ...): ...
def insert(x: Any, tck: Any, m: int = ..., per: int = ...): ...
def splder(tck: Any, n: int = ...): ...
def splantider(tck: Any, n: int = ...): ...
