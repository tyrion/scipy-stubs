# Stubs for scipy.special._mptestutils (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class Arg:
    def __init__(self, a: Any = ..., b: Any = ..., inclusive_a: bool = ..., inclusive_b: bool = ...) -> None: ...
    def _positive_values(self, a: Any, b: Any, n: Any): ...
    def values(self, n: Any): ...

class FixedArg:
    _values: Any = ...
    def __init__(self, values: Any) -> None: ...
    def values(self, n: Any): ...

class ComplexArg:
    real: Any = ...
    imag: Any = ...
    def __init__(self, a: Any = ..., b: Any = ...) -> None: ...
    def values(self, n: Any): ...

class IntArg:
    a: Any = ...
    b: Any = ...
    def __init__(self, a: int = ..., b: int = ...) -> None: ...
    def values(self, n: Any): ...

def get_args(argspec: Any, n: Any): ...

class MpmathData:
    scipy_func: Any = ...
    mpmath_func: Any = ...
    arg_spec: Any = ...
    dps: Any = ...
    prec: Any = ...
    n: Any = ...
    rtol: Any = ...
    atol: Any = ...
    ignore_inf_sign: Any = ...
    nan_ok: Any = ...
    is_complex: Any = ...
    distinguish_nan_and_inf: Any = ...
    name: Any = ...
    param_filter: Any = ...
    def __init__(self, scipy_func: Any, mpmath_func: Any, arg_spec: Any, name: Optional[Any] = ..., dps: Optional[Any] = ..., prec: Optional[Any] = ..., n: Optional[Any] = ..., rtol: float = ..., atol: float = ..., ignore_inf_sign: bool = ..., distinguish_nan_and_inf: bool = ..., nan_ok: bool = ..., param_filter: Optional[Any] = ...) -> None: ...
    def check(self): ...
    def __repr__(self): ...

def assert_mpmath_equal(*a: Any, **kw: Any) -> None: ...
def nonfunctional_tooslow(func: Any): ...
def mpf2float(x: Any): ...
def mpc2complex(x: Any): ...
def trace_args(func: Any): ...

POSIX: Any

class TimeoutError(Exception): ...

def time_limited(timeout: float = ..., return_val: Any = ..., use_sigalrm: bool = ...): ...
def exception_to_nan(func: Any): ...
def inf_to_nan(func: Any): ...
def mp_assert_allclose(res: Any, std: Any, atol: int = ..., rtol: float = ...) -> None: ...
