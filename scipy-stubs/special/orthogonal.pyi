# Stubs for scipy.special.orthogonal (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import numpy as np
from ._ufuncs import binom as binom, eval_chebyc as eval_chebyc, eval_chebys as eval_chebys, eval_chebyt as eval_chebyt, eval_chebyu as eval_chebyu, eval_gegenbauer as eval_gegenbauer, eval_genlaguerre as eval_genlaguerre, eval_hermite as eval_hermite, eval_hermitenorm as eval_hermitenorm, eval_jacobi as eval_jacobi, eval_laguerre as eval_laguerre, eval_legendre as eval_legendre, eval_sh_chebyt as eval_sh_chebyt, eval_sh_chebyu as eval_sh_chebyu, eval_sh_jacobi as eval_sh_jacobi, eval_sh_legendre as eval_sh_legendre
from typing import Any, Optional

class orthopoly1d(np.poly1d):
    def __init__(self, roots: Any, weights: Optional[Any] = ..., hn: float = ..., kn: float = ..., wfunc: Optional[Any] = ..., limits: Optional[Any] = ..., monic: bool = ..., eval_func: Optional[Any] = ...) -> None: ...
    def __call__(self, v: Any): ...
    def _scale(self, p: Any): ...

def roots_jacobi(n: Any, alpha: Any, beta: Any, mu: bool = ...): ...
def jacobi(n: Any, alpha: Any, beta: Any, monic: bool = ...): ...
def roots_sh_jacobi(n: Any, p1: Any, q1: Any, mu: bool = ...): ...
def sh_jacobi(n: Any, p: Any, q: Any, monic: bool = ...): ...
def roots_genlaguerre(n: Any, alpha: Any, mu: bool = ...): ...
def genlaguerre(n: Any, alpha: Any, monic: bool = ...): ...
def roots_laguerre(n: Any, mu: bool = ...): ...
def laguerre(n: Any, monic: bool = ...): ...
def roots_hermite(n: Any, mu: bool = ...): ...
def hermite(n: Any, monic: bool = ...): ...
def roots_hermitenorm(n: Any, mu: bool = ...): ...
def hermitenorm(n: Any, monic: bool = ...): ...
def roots_gegenbauer(n: Any, alpha: Any, mu: bool = ...): ...
def gegenbauer(n: Any, alpha: Any, monic: bool = ...): ...
def roots_chebyt(n: Any, mu: bool = ...): ...
def chebyt(n: Any, monic: bool = ...): ...
def roots_chebyu(n: Any, mu: bool = ...): ...
def chebyu(n: Any, monic: bool = ...): ...
def roots_chebyc(n: Any, mu: bool = ...): ...
def chebyc(n: Any, monic: bool = ...): ...
def roots_chebys(n: Any, mu: bool = ...): ...
def chebys(n: Any, monic: bool = ...): ...
def roots_sh_chebyt(n: Any, mu: bool = ...): ...
def sh_chebyt(n: Any, monic: bool = ...): ...
def roots_sh_chebyu(n: Any, mu: bool = ...): ...
def sh_chebyu(n: Any, monic: bool = ...): ...
def roots_legendre(n: Any, mu: bool = ...): ...
def legendre(n: Any, monic: bool = ...): ...
def roots_sh_legendre(n: Any, mu: bool = ...): ...
def sh_legendre(n: Any, monic: bool = ...): ...

poch: Any

# Names in __all__ with no definition:
#   c_roots
#   cg_roots
#   h_roots
#   he_roots
#   j_roots
#   js_roots
#   l_roots
#   la_roots
#   p_roots
#   ps_roots
#   s_roots
#   t_roots
#   ts_roots
#   u_roots
#   us_roots
