# Stubs for scipy.odr.odrpack (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

odr: Any

class OdrWarning(UserWarning): ...
class OdrError(Exception): ...
class OdrStop(Exception): ...
odr_error = OdrError
odr_stop = OdrStop

class Data:
    x: Any = ...
    y: Any = ...
    we: Any = ...
    wd: Any = ...
    fix: Any = ...
    meta: Any = ...
    def __init__(self, x: Any, y: Optional[Any] = ..., we: Optional[Any] = ..., wd: Optional[Any] = ..., fix: Optional[Any] = ..., meta: Any = ...) -> None: ...
    def set_meta(self, **kwds: Any) -> None: ...
    def __getattr__(self, attr: Any): ...

class RealData(Data):
    _ga_flags: Any = ...
    x: Any = ...
    y: Any = ...
    sx: Any = ...
    sy: Any = ...
    covx: Any = ...
    covy: Any = ...
    fix: Any = ...
    meta: Any = ...
    def __init__(self, x: Any, y: Optional[Any] = ..., sx: Optional[Any] = ..., sy: Optional[Any] = ..., covx: Optional[Any] = ..., covy: Optional[Any] = ..., fix: Optional[Any] = ..., meta: Any = ...) -> None: ...
    def _sd2wt(self, sd: Any): ...
    def _cov2wt(self, cov: Any): ...
    def __getattr__(self, attr: Any): ...

class Model:
    fcn: Any = ...
    fjacb: Any = ...
    fjacd: Any = ...
    extra_args: Any = ...
    estimate: Any = ...
    implicit: Any = ...
    meta: Any = ...
    def __init__(self, fcn: Any, fjacb: Optional[Any] = ..., fjacd: Optional[Any] = ..., extra_args: Optional[Any] = ..., estimate: Optional[Any] = ..., implicit: int = ..., meta: Optional[Any] = ...) -> None: ...
    def set_meta(self, **kwds: Any) -> None: ...
    def __getattr__(self, attr: Any): ...

class Output:
    beta: Any = ...
    sd_beta: Any = ...
    cov_beta: Any = ...
    stopreason: Any = ...
    def __init__(self, output: Any) -> None: ...
    def pprint(self) -> None: ...

class ODR:
    data: Any = ...
    model: Any = ...
    beta0: Any = ...
    delta0: Any = ...
    ifixx: Any = ...
    ifixb: Any = ...
    job: Any = ...
    iprint: Any = ...
    errfile: Any = ...
    rptfile: Any = ...
    ndigit: Any = ...
    taufac: Any = ...
    sstol: Any = ...
    partol: Any = ...
    maxit: Any = ...
    stpb: Any = ...
    stpd: Any = ...
    sclb: Any = ...
    scld: Any = ...
    work: Any = ...
    iwork: Any = ...
    output: Any = ...
    def __init__(self, data: Any, model: Any, beta0: Optional[Any] = ..., delta0: Optional[Any] = ..., ifixb: Optional[Any] = ..., ifixx: Optional[Any] = ..., job: Optional[Any] = ..., iprint: Optional[Any] = ..., errfile: Optional[Any] = ..., rptfile: Optional[Any] = ..., ndigit: Optional[Any] = ..., taufac: Optional[Any] = ..., sstol: Optional[Any] = ..., partol: Optional[Any] = ..., maxit: Optional[Any] = ..., stpb: Optional[Any] = ..., stpd: Optional[Any] = ..., sclb: Optional[Any] = ..., scld: Optional[Any] = ..., work: Optional[Any] = ..., iwork: Optional[Any] = ...) -> None: ...
    def _check(self) -> None: ...
    def _gen_work(self): ...
    def set_job(self, fit_type: Optional[Any] = ..., deriv: Optional[Any] = ..., var_calc: Optional[Any] = ..., del_init: Optional[Any] = ..., restart: Optional[Any] = ...) -> None: ...
    def set_iprint(self, init: Optional[Any] = ..., so_init: Optional[Any] = ..., iter: Optional[Any] = ..., so_iter: Optional[Any] = ..., iter_step: Optional[Any] = ..., final: Optional[Any] = ..., so_final: Optional[Any] = ...) -> None: ...
    def run(self): ...
    def restart(self, iter: Optional[Any] = ...): ...
