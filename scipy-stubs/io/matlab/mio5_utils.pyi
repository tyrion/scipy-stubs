# Stubs for scipy.io.matlab.mio5_utils (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

import scipy.sparse.compressed
asbytes: Any
asstr: Any
pycopy: Any
swapped_code: str

def __pyx_unpickle_VarHeader5(*args, **kwargs) -> Any: ...
def byteswap_u4(*args, **kwargs) -> Any: ...
def chars_to_strings(*args, **kwargs) -> Any: ...
def squeeze_element(*args, **kwargs) -> Any: ...

class VarHeader5:
    dims: Any = ...
    is_global: Any = ...
    is_logical: Any = ...
    mclass: Any = ...
    name: Any = ...
    nzmax: Any = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def set_dims(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class VarReader5:
    is_swapped: Any = ...
    little_endian: Any = ...
    __pyx_vtable__: Any = ...
    @classmethod
    def __init__(cls, *args, **kwargs) -> None: ...
    def array_from_header(self, *args, **kwargs) -> Any: ...
    def read_cells(self, *args, **kwargs) -> Any: ...
    def read_char(self, *args, **kwargs) -> Any: ...
    def read_fieldnames(self, *args, **kwargs) -> Any: ...
    def read_full_tag(self, *args, **kwargs) -> Any: ...
    def read_header(self, *args, **kwargs) -> Any: ...
    def read_numeric(self, *args, **kwargs) -> Any: ...
    def read_opaque(self, *args, **kwargs) -> Any: ...
    def read_real_complex(self, *args, **kwargs) -> Any: ...
    def read_struct(self, *args, **kwargs) -> Any: ...
    def read_tag(self, *args, **kwargs) -> Any: ...
    def set_stream(self, *args, **kwargs) -> Any: ...
    def shape_from_header(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class csc_matrix(scipy.sparse.compressed._cs_matrix):
    _swap: Any = ...
    format: Any = ...
    getcol: Any = ...
    getrow: Any = ...
    nonzero: Any = ...
    tocsc: Any = ...
    tocsr: Any = ...
    transpose: Any = ...
    __getitem__: Any = ...
    __iter__: Any = ...
