# Stubs for scipy.io.harwell_boeing._fortran_format_parser (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class BadFortranFormat(SyntaxError): ...

class IntFormat:
    @classmethod
    def from_number(cls, n: Any, min: Optional[Any] = ...): ...
    width: Any = ...
    repeat: Any = ...
    min: Any = ...
    def __init__(self, width: Any, min: Optional[Any] = ..., repeat: Optional[Any] = ...) -> None: ...
    def __repr__(self): ...
    @property
    def fortran_format(self): ...
    @property
    def python_format(self): ...

class ExpFormat:
    @classmethod
    def from_number(cls, n: Any, min: Optional[Any] = ...): ...
    width: Any = ...
    significand: Any = ...
    repeat: Any = ...
    min: Any = ...
    def __init__(self, width: Any, significand: Any, min: Optional[Any] = ..., repeat: Optional[Any] = ...) -> None: ...
    def __repr__(self): ...
    @property
    def fortran_format(self): ...
    @property
    def python_format(self): ...

class Token:
    type: Any = ...
    value: Any = ...
    pos: Any = ...
    def __init__(self, type: Any, value: Any, pos: Any) -> None: ...
    def __str__(self): ...
    def __repr__(self): ...

class Tokenizer:
    tokens: Any = ...
    res: Any = ...
    def __init__(self) -> None: ...
    data: Any = ...
    curpos: int = ...
    len: Any = ...
    def input(self, s: Any) -> None: ...
    def next_token(self): ...

class FortranFormatParser:
    tokenizer: Any = ...
    def __init__(self) -> None: ...
    def parse(self, s: Any): ...
    def _get_min(self, tokens: Any): ...
    def _expect(self, token: Any, tp: Any) -> None: ...
    def _parse_format(self, tokens: Any): ...
    def _next(self, tokens: Any, tp: Any): ...
