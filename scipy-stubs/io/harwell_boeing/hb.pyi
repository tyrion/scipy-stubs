# Stubs for scipy.io.harwell_boeing.hb (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class MalformedHeader(Exception): ...
class LineOverflow(Warning): ...

class HBInfo:
    @classmethod
    def from_data(cls, m: Any, title: str = ..., key: str = ..., mxtype: Optional[Any] = ..., fmt: Optional[Any] = ...): ...
    @classmethod
    def from_file(cls, fid: Any): ...
    title: Any = ...
    key: Any = ...
    total_nlines: Any = ...
    pointer_nlines: Any = ...
    indices_nlines: Any = ...
    values_nlines: Any = ...
    pointer_format: Any = ...
    indices_format: Any = ...
    values_format: Any = ...
    pointer_dtype: Any = ...
    indices_dtype: Any = ...
    values_dtype: Any = ...
    pointer_nbytes_full: Any = ...
    indices_nbytes_full: Any = ...
    values_nbytes_full: Any = ...
    nrows: Any = ...
    ncols: Any = ...
    nnon_zeros: Any = ...
    nelementals: Any = ...
    mxtype: Any = ...
    def __init__(self, title: Any, key: Any, total_nlines: Any, pointer_nlines: Any, indices_nlines: Any, values_nlines: Any, mxtype: Any, nrows: Any, ncols: Any, nnon_zeros: Any, pointer_format_str: Any, indices_format_str: Any, values_format_str: Any, right_hand_sides_nlines: int = ..., nelementals: int = ...) -> None: ...
    def dump(self): ...

class HBMatrixType:
    _q2f_type: Any = ...
    _q2f_structure: Any = ...
    _q2f_storage: Any = ...
    _f2q_type: Any = ...
    _f2q_structure: Any = ...
    _f2q_storage: Any = ...
    @classmethod
    def from_fortran(cls, fmt: Any): ...
    value_type: Any = ...
    structure: Any = ...
    storage: Any = ...
    def __init__(self, value_type: Any, structure: Any, storage: str = ...) -> None: ...
    @property
    def fortran_format(self): ...
    def __repr__(self): ...

class HBFile:
    _fid: Any = ...
    _hb_info: Any = ...
    def __init__(self, file: Any, hb_info: Optional[Any] = ...) -> None: ...
    @property
    def title(self): ...
    @property
    def key(self): ...
    @property
    def type(self): ...
    @property
    def structure(self): ...
    @property
    def storage(self): ...
    def read_matrix(self): ...
    def write_matrix(self, m: Any): ...

def hb_read(path_or_open_file: Any): ...
def hb_write(path_or_open_file: Any, m: Any, hb_info: Optional[Any] = ...): ...
