# Stubs for scipy.constants.constants (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

pi: Any
golden: Any
golden_ratio: Any
yotta: float
zetta: float
exa: float
peta: float
tera: float
giga: float
mega: float
kilo: float
hecto: float
deka: float
deci: float
centi: float
milli: float
micro: float
nano: float
pico: float
femto: float
atto: float
zepto: float
kibi: Any
mebi: Any
gibi: Any
tebi: Any
pebi: Any
exbi: Any
zebi: Any
yobi: Any
c: Any
speed_of_light: Any
mu_0: Any
epsilon_0: Any
h: Any
Planck: Any
hbar: Any
G: Any
gravitational_constant: Any
g: Any
e: Any
elementary_charge: Any
R: Any
gas_constant: Any
alpha: Any
fine_structure: Any
N_A: Any
Avogadro: Any
k: Any
Boltzmann: Any
sigma: Any
Stefan_Boltzmann: Any
Wien: Any
Rydberg: Any
gram: float
metric_ton: float
grain: float
lb: Any
pound: Any
blob: Any
slinch: Any
slug: Any
oz: Any
ounce: Any
stone: Any
long_ton: Any
short_ton: Any
troy_ounce: Any
troy_pound: Any
carat: float
m_e: Any
electron_mass: Any
m_p: Any
proton_mass: Any
m_n: Any
neutron_mass: Any
m_u: Any
u: Any
atomic_mass: Any
degree: Any
arcmin: Any
arcminute: Any
arcsec: Any
arcsecond: Any
minute: float
hour: Any
day: Any
week: Any
year: Any
Julian_year: Any
inch: float
foot: Any
yard: Any
mile: Any
mil: Any
pt: Any
point: Any
survey_foot: Any
survey_mile: Any
nautical_mile: float
fermi: float
angstrom: float
micron: float
au: float
astronomical_unit: float
light_year: Any
parsec: Any
atm: Any
atmosphere: Any
bar: float
torr: Any
mmHg: Any
psi: Any
hectare: float
acre: Any
litre: float
liter: float
gallon: Any
gallon_US: Any
fluid_ounce: Any
fluid_ounce_US: Any
bbl: Any
barrel: Any
gallon_imp: float
fluid_ounce_imp: Any
kmh: Any
mph: Any
mach: float
speed_of_sound: float
knot: Any
zero_Celsius: float
degree_Fahrenheit: Any
eV = elementary_charge
electron_volt = elementary_charge
calorie: float
calorie_th: float
calorie_IT: float
erg: float
Btu_th: Any
Btu: Any
Btu_IT: Any
ton_TNT: Any
hp: Any
horsepower: Any
dyn: float
dyne: float
lbf: Any
pound_force: Any
kgf = g
kilogram_force = g

def convert_temperature(val: Any, old_scale: Any, new_scale: Any): ...
def lambda2nu(lambda_: Any): ...
def nu2lambda(nu: Any): ...
